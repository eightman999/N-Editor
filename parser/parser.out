Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> country_file
Rule 1     country_file -> country_blocks
Rule 2     country_blocks -> country_block
Rule 3     country_blocks -> country_blocks country_block
Rule 4     country_block -> ID EQUALS LBRACE color_defs RBRACE
Rule 5     color_defs -> color_def
Rule 6     color_defs -> color_defs color_def
Rule 7     color_def -> COLOR EQUALS color_value
Rule 8     color_def -> COLOR_UI EQUALS color_value
Rule 9     color_value -> HSV LBRACE NUMBER NUMBER NUMBER RBRACE
Rule 10    color_value -> RGB LBRACE NUMBER NUMBER NUMBER RBRACE

Terminals, with rules where they appear

COLOR                : 7
COLOR_UI             : 8
EQUALS               : 4 7 8
HSV                  : 9
ID                   : 4
LBRACE               : 4 9 10
NUMBER               : 9 9 9 10 10 10
RBRACE               : 4 9 10
RGB                  : 10
error                : 

Nonterminals, with rules where they appear

color_def            : 5 6
color_defs           : 4 6
color_value          : 7 8
country_block        : 2 3
country_blocks       : 1 3
country_file         : 0

Parsing method: LALR

state 0

    (0) S' -> . country_file
    (1) country_file -> . country_blocks
    (2) country_blocks -> . country_block
    (3) country_blocks -> . country_blocks country_block
    (4) country_block -> . ID EQUALS LBRACE color_defs RBRACE

    ID              shift and go to state 4

    country_file                   shift and go to state 1
    country_blocks                 shift and go to state 2
    country_block                  shift and go to state 3

state 1

    (0) S' -> country_file .



state 2

    (1) country_file -> country_blocks .
    (3) country_blocks -> country_blocks . country_block
    (4) country_block -> . ID EQUALS LBRACE color_defs RBRACE

    $end            reduce using rule 1 (country_file -> country_blocks .)
    ID              shift and go to state 4

    country_block                  shift and go to state 5

state 3

    (2) country_blocks -> country_block .

    ID              reduce using rule 2 (country_blocks -> country_block .)
    $end            reduce using rule 2 (country_blocks -> country_block .)


state 4

    (4) country_block -> ID . EQUALS LBRACE color_defs RBRACE

    EQUALS          shift and go to state 6


state 5

    (3) country_blocks -> country_blocks country_block .

    ID              reduce using rule 3 (country_blocks -> country_blocks country_block .)
    $end            reduce using rule 3 (country_blocks -> country_blocks country_block .)


state 6

    (4) country_block -> ID EQUALS . LBRACE color_defs RBRACE

    LBRACE          shift and go to state 7


state 7

    (4) country_block -> ID EQUALS LBRACE . color_defs RBRACE
    (5) color_defs -> . color_def
    (6) color_defs -> . color_defs color_def
    (7) color_def -> . COLOR EQUALS color_value
    (8) color_def -> . COLOR_UI EQUALS color_value

    COLOR           shift and go to state 10
    COLOR_UI        shift and go to state 11

    color_defs                     shift and go to state 8
    color_def                      shift and go to state 9

state 8

    (4) country_block -> ID EQUALS LBRACE color_defs . RBRACE
    (6) color_defs -> color_defs . color_def
    (7) color_def -> . COLOR EQUALS color_value
    (8) color_def -> . COLOR_UI EQUALS color_value

    RBRACE          shift and go to state 12
    COLOR           shift and go to state 10
    COLOR_UI        shift and go to state 11

    color_def                      shift and go to state 13

state 9

    (5) color_defs -> color_def .

    RBRACE          reduce using rule 5 (color_defs -> color_def .)
    COLOR           reduce using rule 5 (color_defs -> color_def .)
    COLOR_UI        reduce using rule 5 (color_defs -> color_def .)


state 10

    (7) color_def -> COLOR . EQUALS color_value

    EQUALS          shift and go to state 14


state 11

    (8) color_def -> COLOR_UI . EQUALS color_value

    EQUALS          shift and go to state 15


state 12

    (4) country_block -> ID EQUALS LBRACE color_defs RBRACE .

    ID              reduce using rule 4 (country_block -> ID EQUALS LBRACE color_defs RBRACE .)
    $end            reduce using rule 4 (country_block -> ID EQUALS LBRACE color_defs RBRACE .)


state 13

    (6) color_defs -> color_defs color_def .

    RBRACE          reduce using rule 6 (color_defs -> color_defs color_def .)
    COLOR           reduce using rule 6 (color_defs -> color_defs color_def .)
    COLOR_UI        reduce using rule 6 (color_defs -> color_defs color_def .)


state 14

    (7) color_def -> COLOR EQUALS . color_value
    (9) color_value -> . HSV LBRACE NUMBER NUMBER NUMBER RBRACE
    (10) color_value -> . RGB LBRACE NUMBER NUMBER NUMBER RBRACE

    HSV             shift and go to state 17
    RGB             shift and go to state 18

    color_value                    shift and go to state 16

state 15

    (8) color_def -> COLOR_UI EQUALS . color_value
    (9) color_value -> . HSV LBRACE NUMBER NUMBER NUMBER RBRACE
    (10) color_value -> . RGB LBRACE NUMBER NUMBER NUMBER RBRACE

    HSV             shift and go to state 17
    RGB             shift and go to state 18

    color_value                    shift and go to state 19

state 16

    (7) color_def -> COLOR EQUALS color_value .

    RBRACE          reduce using rule 7 (color_def -> COLOR EQUALS color_value .)
    COLOR           reduce using rule 7 (color_def -> COLOR EQUALS color_value .)
    COLOR_UI        reduce using rule 7 (color_def -> COLOR EQUALS color_value .)


state 17

    (9) color_value -> HSV . LBRACE NUMBER NUMBER NUMBER RBRACE

    LBRACE          shift and go to state 20


state 18

    (10) color_value -> RGB . LBRACE NUMBER NUMBER NUMBER RBRACE

    LBRACE          shift and go to state 21


state 19

    (8) color_def -> COLOR_UI EQUALS color_value .

    RBRACE          reduce using rule 8 (color_def -> COLOR_UI EQUALS color_value .)
    COLOR           reduce using rule 8 (color_def -> COLOR_UI EQUALS color_value .)
    COLOR_UI        reduce using rule 8 (color_def -> COLOR_UI EQUALS color_value .)


state 20

    (9) color_value -> HSV LBRACE . NUMBER NUMBER NUMBER RBRACE

    NUMBER          shift and go to state 22


state 21

    (10) color_value -> RGB LBRACE . NUMBER NUMBER NUMBER RBRACE

    NUMBER          shift and go to state 23


state 22

    (9) color_value -> HSV LBRACE NUMBER . NUMBER NUMBER RBRACE

    NUMBER          shift and go to state 24


state 23

    (10) color_value -> RGB LBRACE NUMBER . NUMBER NUMBER RBRACE

    NUMBER          shift and go to state 25


state 24

    (9) color_value -> HSV LBRACE NUMBER NUMBER . NUMBER RBRACE

    NUMBER          shift and go to state 26


state 25

    (10) color_value -> RGB LBRACE NUMBER NUMBER . NUMBER RBRACE

    NUMBER          shift and go to state 27


state 26

    (9) color_value -> HSV LBRACE NUMBER NUMBER NUMBER . RBRACE

    RBRACE          shift and go to state 28


state 27

    (10) color_value -> RGB LBRACE NUMBER NUMBER NUMBER . RBRACE

    RBRACE          shift and go to state 29


state 28

    (9) color_value -> HSV LBRACE NUMBER NUMBER NUMBER RBRACE .

    RBRACE          reduce using rule 9 (color_value -> HSV LBRACE NUMBER NUMBER NUMBER RBRACE .)
    COLOR           reduce using rule 9 (color_value -> HSV LBRACE NUMBER NUMBER NUMBER RBRACE .)
    COLOR_UI        reduce using rule 9 (color_value -> HSV LBRACE NUMBER NUMBER NUMBER RBRACE .)


state 29

    (10) color_value -> RGB LBRACE NUMBER NUMBER NUMBER RBRACE .

    RBRACE          reduce using rule 10 (color_value -> RGB LBRACE NUMBER NUMBER NUMBER RBRACE .)
    COLOR           reduce using rule 10 (color_value -> RGB LBRACE NUMBER NUMBER NUMBER RBRACE .)
    COLOR_UI        reduce using rule 10 (color_value -> RGB LBRACE NUMBER NUMBER NUMBER RBRACE .)

