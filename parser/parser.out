Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> ship_names
Rule 1     ship_names -> ship_name_block
Rule 2     ship_names -> ship_names ship_name_block
Rule 3     ship_names -> empty
Rule 4     ship_name_block -> IDENTIFIER EQUALS LBRACE block_content RBRACE
Rule 5     block_content -> block_item
Rule 6     block_content -> block_content block_item
Rule 7     block_content -> empty
Rule 8     block_item -> IDENTIFIER EQUALS value
Rule 9     block_item -> IDENTIFIER EQUALS LBRACE value_list RBRACE
Rule 10    value -> STRING
Rule 11    value -> NUMBER
Rule 12    value -> IDENTIFIER
Rule 13    value_list -> value
Rule 14    value_list -> value_list value
Rule 15    value_list -> empty
Rule 16    empty -> <empty>

Terminals, with rules where they appear

EQUALS               : 4 8 9
IDENTIFIER           : 4 8 9 12
LBRACE               : 4 9
NUMBER               : 11
RBRACE               : 4 9
STRING               : 10
error                : 

Nonterminals, with rules where they appear

block_content        : 4 6
block_item           : 5 6
empty                : 3 7 15
ship_name_block      : 1 2
ship_names           : 2 0
value                : 8 13 14
value_list           : 9 14

Parsing method: LALR

state 0

    (0) S' -> . ship_names
    (1) ship_names -> . ship_name_block
    (2) ship_names -> . ship_names ship_name_block
    (3) ship_names -> . empty
    (4) ship_name_block -> . IDENTIFIER EQUALS LBRACE block_content RBRACE
    (16) empty -> .

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 4
    $end            reduce using rule 16 (empty -> .)

  ! IDENTIFIER      [ reduce using rule 16 (empty -> .) ]

    ship_names                     shift and go to state 1
    ship_name_block                shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> ship_names .
    (2) ship_names -> ship_names . ship_name_block
    (4) ship_name_block -> . IDENTIFIER EQUALS LBRACE block_content RBRACE

    IDENTIFIER      shift and go to state 4

    ship_name_block                shift and go to state 5

state 2

    (1) ship_names -> ship_name_block .

    IDENTIFIER      reduce using rule 1 (ship_names -> ship_name_block .)
    $end            reduce using rule 1 (ship_names -> ship_name_block .)


state 3

    (3) ship_names -> empty .

    IDENTIFIER      reduce using rule 3 (ship_names -> empty .)
    $end            reduce using rule 3 (ship_names -> empty .)


state 4

    (4) ship_name_block -> IDENTIFIER . EQUALS LBRACE block_content RBRACE

    EQUALS          shift and go to state 6


state 5

    (2) ship_names -> ship_names ship_name_block .

    IDENTIFIER      reduce using rule 2 (ship_names -> ship_names ship_name_block .)
    $end            reduce using rule 2 (ship_names -> ship_names ship_name_block .)


state 6

    (4) ship_name_block -> IDENTIFIER EQUALS . LBRACE block_content RBRACE

    LBRACE          shift and go to state 7


state 7

    (4) ship_name_block -> IDENTIFIER EQUALS LBRACE . block_content RBRACE
    (5) block_content -> . block_item
    (6) block_content -> . block_content block_item
    (7) block_content -> . empty
    (8) block_item -> . IDENTIFIER EQUALS value
    (9) block_item -> . IDENTIFIER EQUALS LBRACE value_list RBRACE
    (16) empty -> .

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 8
    RBRACE          reduce using rule 16 (empty -> .)

  ! IDENTIFIER      [ reduce using rule 16 (empty -> .) ]

    block_content                  shift and go to state 9
    block_item                     shift and go to state 10
    empty                          shift and go to state 11

state 8

    (8) block_item -> IDENTIFIER . EQUALS value
    (9) block_item -> IDENTIFIER . EQUALS LBRACE value_list RBRACE

    EQUALS          shift and go to state 12


state 9

    (4) ship_name_block -> IDENTIFIER EQUALS LBRACE block_content . RBRACE
    (6) block_content -> block_content . block_item
    (8) block_item -> . IDENTIFIER EQUALS value
    (9) block_item -> . IDENTIFIER EQUALS LBRACE value_list RBRACE

    RBRACE          shift and go to state 13
    IDENTIFIER      shift and go to state 8

    block_item                     shift and go to state 14

state 10

    (5) block_content -> block_item .

    RBRACE          reduce using rule 5 (block_content -> block_item .)
    IDENTIFIER      reduce using rule 5 (block_content -> block_item .)


state 11

    (7) block_content -> empty .

    RBRACE          reduce using rule 7 (block_content -> empty .)
    IDENTIFIER      reduce using rule 7 (block_content -> empty .)


state 12

    (8) block_item -> IDENTIFIER EQUALS . value
    (9) block_item -> IDENTIFIER EQUALS . LBRACE value_list RBRACE
    (10) value -> . STRING
    (11) value -> . NUMBER
    (12) value -> . IDENTIFIER

    LBRACE          shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    IDENTIFIER      shift and go to state 15

    value                          shift and go to state 16

state 13

    (4) ship_name_block -> IDENTIFIER EQUALS LBRACE block_content RBRACE .

    IDENTIFIER      reduce using rule 4 (ship_name_block -> IDENTIFIER EQUALS LBRACE block_content RBRACE .)
    $end            reduce using rule 4 (ship_name_block -> IDENTIFIER EQUALS LBRACE block_content RBRACE .)


state 14

    (6) block_content -> block_content block_item .

    RBRACE          reduce using rule 6 (block_content -> block_content block_item .)
    IDENTIFIER      reduce using rule 6 (block_content -> block_content block_item .)


state 15

    (12) value -> IDENTIFIER .

    RBRACE          reduce using rule 12 (value -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 12 (value -> IDENTIFIER .)
    STRING          reduce using rule 12 (value -> IDENTIFIER .)
    NUMBER          reduce using rule 12 (value -> IDENTIFIER .)


state 16

    (8) block_item -> IDENTIFIER EQUALS value .

    RBRACE          reduce using rule 8 (block_item -> IDENTIFIER EQUALS value .)
    IDENTIFIER      reduce using rule 8 (block_item -> IDENTIFIER EQUALS value .)


state 17

    (9) block_item -> IDENTIFIER EQUALS LBRACE . value_list RBRACE
    (13) value_list -> . value
    (14) value_list -> . value_list value
    (15) value_list -> . empty
    (10) value -> . STRING
    (11) value -> . NUMBER
    (12) value -> . IDENTIFIER
    (16) empty -> .

  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    IDENTIFIER      shift and go to state 15
    RBRACE          reduce using rule 16 (empty -> .)

  ! STRING          [ reduce using rule 16 (empty -> .) ]
  ! NUMBER          [ reduce using rule 16 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 16 (empty -> .) ]

    value_list                     shift and go to state 20
    value                          shift and go to state 21
    empty                          shift and go to state 22

state 18

    (10) value -> STRING .

    RBRACE          reduce using rule 10 (value -> STRING .)
    IDENTIFIER      reduce using rule 10 (value -> STRING .)
    STRING          reduce using rule 10 (value -> STRING .)
    NUMBER          reduce using rule 10 (value -> STRING .)


state 19

    (11) value -> NUMBER .

    RBRACE          reduce using rule 11 (value -> NUMBER .)
    IDENTIFIER      reduce using rule 11 (value -> NUMBER .)
    STRING          reduce using rule 11 (value -> NUMBER .)
    NUMBER          reduce using rule 11 (value -> NUMBER .)


state 20

    (9) block_item -> IDENTIFIER EQUALS LBRACE value_list . RBRACE
    (14) value_list -> value_list . value
    (10) value -> . STRING
    (11) value -> . NUMBER
    (12) value -> . IDENTIFIER

    RBRACE          shift and go to state 23
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    IDENTIFIER      shift and go to state 15

    value                          shift and go to state 24

state 21

    (13) value_list -> value .

    RBRACE          reduce using rule 13 (value_list -> value .)
    STRING          reduce using rule 13 (value_list -> value .)
    NUMBER          reduce using rule 13 (value_list -> value .)
    IDENTIFIER      reduce using rule 13 (value_list -> value .)


state 22

    (15) value_list -> empty .

    RBRACE          reduce using rule 15 (value_list -> empty .)
    STRING          reduce using rule 15 (value_list -> empty .)
    NUMBER          reduce using rule 15 (value_list -> empty .)
    IDENTIFIER      reduce using rule 15 (value_list -> empty .)


state 23

    (9) block_item -> IDENTIFIER EQUALS LBRACE value_list RBRACE .

    RBRACE          reduce using rule 9 (block_item -> IDENTIFIER EQUALS LBRACE value_list RBRACE .)
    IDENTIFIER      reduce using rule 9 (block_item -> IDENTIFIER EQUALS LBRACE value_list RBRACE .)


state 24

    (14) value_list -> value_list value .

    RBRACE          reduce using rule 14 (value_list -> value_list value .)
    STRING          reduce using rule 14 (value_list -> value_list value .)
    NUMBER          reduce using rule 14 (value_list -> value_list value .)
    IDENTIFIER      reduce using rule 14 (value_list -> value_list value .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENTIFIER in state 0 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 7 resolved as shift
WARNING: shift/reduce conflict for STRING in state 17 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 17 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 17 resolved as shift
