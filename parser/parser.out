Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> naval_file
Rule 1     naval_file -> statements
Rule 2     statements -> statement
Rule 3     statements -> statements statement
Rule 4     statements -> empty
Rule 5     statement -> ID EQUALS value
Rule 6     statement -> ID EQUALS block
Rule 7     value -> ID
Rule 8     value -> NUMBER
Rule 9     value -> STRING
Rule 10    value -> YES
Rule 11    value -> NO
Rule 12    value -> qualified_id
Rule 13    qualified_id -> ID COLON ID
Rule 14    block -> LBRACE statements RBRACE
Rule 15    block -> LBRACE RBRACE
Rule 16    empty -> <empty>

Terminals, with rules where they appear

COLON                : 13
EQUALS               : 5 6
ID                   : 5 6 7 13 13
LBRACE               : 14 15
NO                   : 11
NUMBER               : 8
RBRACE               : 14 15
STRING               : 9
YES                  : 10
error                : 

Nonterminals, with rules where they appear

block                : 6
empty                : 4
naval_file           : 0
qualified_id         : 12
statement            : 2 3
statements           : 1 3 14
value                : 5

Parsing method: LALR

state 0

    (0) S' -> . naval_file
    (1) naval_file -> . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . empty
    (5) statement -> . ID EQUALS value
    (6) statement -> . ID EQUALS block
    (16) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 5
    $end            reduce using rule 16 (empty -> .)

  ! ID              [ reduce using rule 16 (empty -> .) ]

    naval_file                     shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    empty                          shift and go to state 4

state 1

    (0) S' -> naval_file .



state 2

    (1) naval_file -> statements .
    (3) statements -> statements . statement
    (5) statement -> . ID EQUALS value
    (6) statement -> . ID EQUALS block

    $end            reduce using rule 1 (naval_file -> statements .)
    ID              shift and go to state 5

    statement                      shift and go to state 6

state 3

    (2) statements -> statement .

    ID              reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)
    RBRACE          reduce using rule 2 (statements -> statement .)


state 4

    (4) statements -> empty .

    ID              reduce using rule 4 (statements -> empty .)
    $end            reduce using rule 4 (statements -> empty .)
    RBRACE          reduce using rule 4 (statements -> empty .)


state 5

    (5) statement -> ID . EQUALS value
    (6) statement -> ID . EQUALS block

    EQUALS          shift and go to state 7


state 6

    (3) statements -> statements statement .

    ID              reduce using rule 3 (statements -> statements statement .)
    $end            reduce using rule 3 (statements -> statements statement .)
    RBRACE          reduce using rule 3 (statements -> statements statement .)


state 7

    (5) statement -> ID EQUALS . value
    (6) statement -> ID EQUALS . block
    (7) value -> . ID
    (8) value -> . NUMBER
    (9) value -> . STRING
    (10) value -> . YES
    (11) value -> . NO
    (12) value -> . qualified_id
    (14) block -> . LBRACE statements RBRACE
    (15) block -> . LBRACE RBRACE
    (13) qualified_id -> . ID COLON ID

    ID              shift and go to state 8
    NUMBER          shift and go to state 11
    STRING          shift and go to state 12
    YES             shift and go to state 13
    NO              shift and go to state 14
    LBRACE          shift and go to state 16

    value                          shift and go to state 9
    block                          shift and go to state 10
    qualified_id                   shift and go to state 15

state 8

    (7) value -> ID .
    (13) qualified_id -> ID . COLON ID

    ID              reduce using rule 7 (value -> ID .)
    $end            reduce using rule 7 (value -> ID .)
    RBRACE          reduce using rule 7 (value -> ID .)
    COLON           shift and go to state 17


state 9

    (5) statement -> ID EQUALS value .

    ID              reduce using rule 5 (statement -> ID EQUALS value .)
    $end            reduce using rule 5 (statement -> ID EQUALS value .)
    RBRACE          reduce using rule 5 (statement -> ID EQUALS value .)


state 10

    (6) statement -> ID EQUALS block .

    ID              reduce using rule 6 (statement -> ID EQUALS block .)
    $end            reduce using rule 6 (statement -> ID EQUALS block .)
    RBRACE          reduce using rule 6 (statement -> ID EQUALS block .)


state 11

    (8) value -> NUMBER .

    ID              reduce using rule 8 (value -> NUMBER .)
    $end            reduce using rule 8 (value -> NUMBER .)
    RBRACE          reduce using rule 8 (value -> NUMBER .)


state 12

    (9) value -> STRING .

    ID              reduce using rule 9 (value -> STRING .)
    $end            reduce using rule 9 (value -> STRING .)
    RBRACE          reduce using rule 9 (value -> STRING .)


state 13

    (10) value -> YES .

    ID              reduce using rule 10 (value -> YES .)
    $end            reduce using rule 10 (value -> YES .)
    RBRACE          reduce using rule 10 (value -> YES .)


state 14

    (11) value -> NO .

    ID              reduce using rule 11 (value -> NO .)
    $end            reduce using rule 11 (value -> NO .)
    RBRACE          reduce using rule 11 (value -> NO .)


state 15

    (12) value -> qualified_id .

    ID              reduce using rule 12 (value -> qualified_id .)
    $end            reduce using rule 12 (value -> qualified_id .)
    RBRACE          reduce using rule 12 (value -> qualified_id .)


state 16

    (14) block -> LBRACE . statements RBRACE
    (15) block -> LBRACE . RBRACE
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . empty
    (5) statement -> . ID EQUALS value
    (6) statement -> . ID EQUALS block
    (16) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    RBRACE          shift and go to state 19
    ID              shift and go to state 5

  ! RBRACE          [ reduce using rule 16 (empty -> .) ]
  ! ID              [ reduce using rule 16 (empty -> .) ]

    statements                     shift and go to state 18
    statement                      shift and go to state 3
    empty                          shift and go to state 4

state 17

    (13) qualified_id -> ID COLON . ID

    ID              shift and go to state 20


state 18

    (14) block -> LBRACE statements . RBRACE
    (3) statements -> statements . statement
    (5) statement -> . ID EQUALS value
    (6) statement -> . ID EQUALS block

    RBRACE          shift and go to state 21
    ID              shift and go to state 5

    statement                      shift and go to state 6

state 19

    (15) block -> LBRACE RBRACE .

    ID              reduce using rule 15 (block -> LBRACE RBRACE .)
    $end            reduce using rule 15 (block -> LBRACE RBRACE .)
    RBRACE          reduce using rule 15 (block -> LBRACE RBRACE .)


state 20

    (13) qualified_id -> ID COLON ID .

    ID              reduce using rule 13 (qualified_id -> ID COLON ID .)
    $end            reduce using rule 13 (qualified_id -> ID COLON ID .)
    RBRACE          reduce using rule 13 (qualified_id -> ID COLON ID .)


state 21

    (14) block -> LBRACE statements RBRACE .

    ID              reduce using rule 14 (block -> LBRACE statements RBRACE .)
    $end            reduce using rule 14 (block -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 14 (block -> LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 16 resolved as shift
WARNING: shift/reduce conflict for ID in state 16 resolved as shift
