
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLOR COLOR_UI EQUALS HSV ID LBRACE NUMBER RBRACE RGBcountry_file : country_blockscountry_blocks : country_block\n| country_blocks country_blockcountry_block : ID EQUALS LBRACE color_defs RBRACEcolor_defs : color_def\n| color_defs color_defcolor_def : COLOR EQUALS color_value\n| COLOR_UI EQUALS color_valuecolor_value : HSV LBRACE NUMBER NUMBER NUMBER RBRACE\n| RGB LBRACE NUMBER NUMBER NUMBER RBRACE'
    
_lr_action_items = {'ID':([0,2,3,5,12,],[4,4,-2,-3,-4,]),'$end':([1,2,3,5,12,],[0,-1,-2,-3,-4,]),'EQUALS':([4,10,11,],[6,14,15,]),'LBRACE':([6,17,18,],[7,20,21,]),'COLOR':([7,8,9,13,16,19,28,29,],[10,10,-5,-6,-7,-8,-9,-10,]),'COLOR_UI':([7,8,9,13,16,19,28,29,],[11,11,-5,-6,-7,-8,-9,-10,]),'RBRACE':([8,9,13,16,19,26,27,28,29,],[12,-5,-6,-7,-8,28,29,-9,-10,]),'HSV':([14,15,],[17,17,]),'RGB':([14,15,],[18,18,]),'NUMBER':([20,21,22,23,24,25,],[22,23,24,25,26,27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'country_file':([0,],[1,]),'country_blocks':([0,],[2,]),'country_block':([0,2,],[3,5,]),'color_defs':([7,],[8,]),'color_def':([7,8,],[9,13,]),'color_value':([14,15,],[16,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> country_file","S'",1,None,None,None),
  ('country_file -> country_blocks','country_file',1,'p_country_file','CountryColorParser.py',72),
  ('country_blocks -> country_block','country_blocks',1,'p_country_blocks','CountryColorParser.py',76),
  ('country_blocks -> country_blocks country_block','country_blocks',2,'p_country_blocks','CountryColorParser.py',77),
  ('country_block -> ID EQUALS LBRACE color_defs RBRACE','country_block',5,'p_country_block','CountryColorParser.py',84),
  ('color_defs -> color_def','color_defs',1,'p_color_defs','CountryColorParser.py',88),
  ('color_defs -> color_defs color_def','color_defs',2,'p_color_defs','CountryColorParser.py',89),
  ('color_def -> COLOR EQUALS color_value','color_def',3,'p_color_def','CountryColorParser.py',96),
  ('color_def -> COLOR_UI EQUALS color_value','color_def',3,'p_color_def','CountryColorParser.py',97),
  ('color_value -> HSV LBRACE NUMBER NUMBER NUMBER RBRACE','color_value',6,'p_color_value','CountryColorParser.py',101),
  ('color_value -> RGB LBRACE NUMBER NUMBER NUMBER RBRACE','color_value',6,'p_color_value','CountryColorParser.py',102),
]
